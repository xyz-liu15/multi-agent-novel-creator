项目名称：多智能体协作网络小说创作

项目目标：构建一个多智能体协作系统，用于创作网络小说。该系统将利用“Agno”作为核心开发框架，并采用“uv”进行高效的Python环境管理。项目旨在实现高度模块化、可扩展的架构，允许多个专门的AI智能体（如情节规划师、角色设计师、对话作家、润色编辑等）协同工作，自动生成结构完整、内容丰富的小说。

核心功能：

1.  环境与架构设置：
    *   使用uv初始化并管理项目的Python虚拟环境。
    *   搭建基于Agno框架的模块化项目结构。
    *   定义清晰的目录和文件组织规范。

2.  智能体核心（Agent Core）：
    *   设计并实现一个智能体基类，定义通用接口（如`execute_task`, `communicate`）。
    *   开发不同角色的智能体（例如：大纲智能体、章节智能体、角色智能体、润色智能体）。
    *   实现智能体管理与调度中心，负责任务分配和工作流程控制。

3.  故事引擎（Story Engine）：
    *   开发故事元素模块，用于管理和生成小说的核心要素（世界观、角色、情节线）。
    *   建立一个动态的“故事状态”管理器，跟踪小说的实时进展。
    *   实现一个协作协议，使智能体能够共享信息、传递上下文并解决创作冲突。

4.  工作流与协作（Workflow & Collaboration）：
    *   设计一个从“灵感”到“最终章节”的完整创作工作流。
    *   实现一个任务队列系统，用于智能体之间的任务分发。
    *   建立智能体间的通信机制，允许它们交换意见和创作素材。

5.  数据持久化（Persistence）：
    *   将生成的小说内容（章节、角色设定等）保存到文件或数据库中。
    *   实现项目状态的保存与加载功能，允许中断和恢复创作过程。

6.  用户交互界面（UI）：
    *   开发一个命令行界面（CLI），允许用户启动项目、输入初始创意、监控创作过程并查看结果。
    *   （可选）未来可扩展一个简单的Web界面，用于更直观地展示小说内容和创作状态。

技术栈：

*   编程语言：Python
*   开发框架：Agno
*   环境管理：uv
*   数据存储：JSON文件或SQLite数据库

成功标准：

*   能够成功初始化并运行整个创作系统。
*   能够根据用户输入的简单提示（如“一个关于赛博朋克侦探的故事”），生成至少三个连贯的小说章节。
*   代码结构清晰，遵循Agno框架的最佳实践。
*   任务和智能体可以被轻松扩展。